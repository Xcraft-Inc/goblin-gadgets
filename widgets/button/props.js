import Type from 'goblin-gadgets/types/index.js';

export default [
  {
    name: 'text',
    group: 'main',
    type: Type.nabu,
    description: 'The text of the button',
    required: true,
    defaultValue: '',
  },
  {
    name: 'onClick',
    group: 'main',
    type: Type.function,
  },
  {
    name: 'textColor',
    group: 'aspect',
    type: Type.color,
  },
  {
    name: 'glyphColor',
    group: 'glyph',
    type: Type.color,
  },
  {
    name: 'disabled',
    group: 'main',
    type: Type.bool,
    defaultValue: false,
  },
  {
    name: 'kind',
    group: 'aspect',
    type: Type.enum([
      '',
      'action',
      'button-notification',
      'button-footer',
      'calendar',
      'calendar-navigator',
      'check-button',
      'chronos-navigator',
      'chronos-navigator',
      'combo',
      'combo-item',
      'combo-wrap-item',
      'desk-title',
      'disabled-light',
      'dynamic-toolbar-left',
      'dynamic-toolbar-top-left',
      'dynamic-toolbar-top-right',
      'glyph-item',
      'hover',
      'identity',
      'label',
      'main-tab',
      'main-tab-right',
      'menu-item',
      'notification-close',
      'pane-navigator',
      'pane-hnavigator',
      'pane-vnavigator',
      'recurrence',
      'round',
      'subaction',
      'task-bar',
      'task-tab',
      'task-logo',
      'task-show-footer',
      'thin-left',
      'thin-right',
      'toolbar',
      'view-tab',
      'view-tab-right',
      'warning',
      'text',
    ]),
    description: 'The kind property change the style of the button.',
    defaultValue: '',
  },
  {
    name: 'glyph',
    group: 'glyph',
    type: Type.glyph,
    description: 'Display a glyph before text.',
  },
  {
    name: 'active',
    group: 'aspect',
    type: Type.bool,
    defaultValue: false,
  },
  {
    name: 'readonly',
    group: 'aspect',
    type: Type.bool,
    defaultValue: false,
  },
  {
    name: 'focusable',
    group: 'aspect',
    type: Type.bool,
    defaultValue: false,
  },
  {
    name: 'busy',
    group: 'aspect',
    type: Type.bool,
    defaultValue: false,
  },
  {
    name: 'border',
    group: 'aspect',
    type: Type.enum(['', 'none']),
    defaultValue: '',
  },
  {
    name: 'glyphRotate',
    group: 'glyph',
    type: Type.angle,
  },
  {
    name: 'glyphFlip',
    group: 'glyph',
    type: Type.enum(['', 'horizontal', 'vertical']),
  },
  {
    name: 'glyphSpin',
    group: 'glyph',
    type: Type.enum(['', 'yes']),
  },
  {
    name: 'glyphPosition',
    group: 'glyph',
    type: Type.enum(['', 'left', 'right']),
    defaultValue: 'left',
  },
  {
    name: 'glyphSize',
    group: 'glyph',
    type: Type.percentage,
  },
  {
    name: 'shape',
    group: 'aspect',
    type: Type.shape,
  },
  {
    name: 'tooltip',
    group: 'aspect',
    type: Type.nabu,
  },
  {
    name: 'shortcut',
    group: 'aspect',
    type: Type.shortcut,
  },
  {
    name: 'justify',
    group: 'aspect',
    type: Type.justify,
  },
  {
    name: 'width',
    group: 'layout',
    type: Type.size,
  },
  {
    name: 'height',
    group: 'layout',
    type: Type.size,
  },
  {
    name: 'grow',
    group: 'layout',
    type: Type.grow,
  },
  {
    name: 'spacing',
    group: 'layout',
    type: Type.spacing,
  },
  {
    name: 'backgroundColor',
    group: 'aspect',
    type: Type.color,
  },
  {
    name: 'activeColor',
    group: 'aspect',
    type: Type.color,
  },
  {
    name: 'fontSize',
    group: 'text',
    type: Type.percentage,
  },
  {
    name: 'fontWeight',
    group: 'text',
    type: Type.fontWeight,
  },
  {
    name: 'fontStyle',
    group: 'text',
    type: Type.fontStyle,
  },
  {
    name: 'textTransform',
    group: 'text',
    type: Type.textTransform,
  },
  {
    name: 'wrap',
    group: 'text',
    type: Type.enum(['', 'no', 'no-strict', 'yes', 'yes-permissive']),
  },
  {
    name: 'badgeValue',
    group: 'badge',
    type: Type.enum(['', '1', '2', '99', '123456']),
  },
  {
    name: 'badgePush',
    group: 'badge',
    type: Type.bool,
  },
  {
    name: 'place',
    group: 'aspect',
    type: Type.enum(['', '1/1', '1/3', '2/3', '3/3']),
  },
  {
    name: 'calendarWeekend',
    group: 'calendar',
    type: Type.bool,
  },
  {
    name: 'calendarDimmed',
    group: 'calendar',
    type: Type.bool,
  },
  {
    name: 'cursor',
    group: 'aspect',
    type: Type.cursor,
  },
  {
    name: 'show',
    group: 'aspect',
    type: Type.bool,
    defaultValue: true,
  },
  {
    name: 'visibility',
    group: 'aspect',
    type: Type.bool,
    defaultValue: true,
  },
];
